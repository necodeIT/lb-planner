name: dl_constants.php maintainer
on:
  release:
    types: [published]
    branches: ["app", "moodle"]
jobs:
  update-frontend-files:
    name: Update app version & download url
    if: github.event.release.target_commitish == 'app' && !github.event.release.prerelease
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: web
        env:
          WINDOW_STABLE_URL: ${{ github.server_url }}/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/LB.Planner.Setup.exe
          LINUX_STABLE_URL: ${{ github.server_url }}/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/LB.Planner-x86_64.AppImage
          MAC_STABLE_URL: ${{ github.server_url }}/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/LB.Planner.Setup.dmg
          STABLE_VERSION: ${{ github.event.release.tag_name }}

          FILE_TO_UPDATE: /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/snippets/dl_constants.php

      - name: Remove the old dl_constants.php
      - run: rm -f  ${{env.FILE_TO_UPDATE}}

      - name: Write new version (current only stable) to dl_constants.php
      - run : |
          cat <<EOT > ${{env.FILE_TO_UPDATE}}

          <?php
          
          # AUTOMATICALLY MAINTAINED BY GITHUB ACTIONS â€” DO NOT EDIT
          
          const appversions = array(
            'stable' => array(
              'version' => '${{ env.STABLE_VERSION }}',
              'downloads' => array(
                  'windows' => '${{ env.WINDOW_STABLE_URL }}',
                  'linux' => '${{ env.LINUX_STABLE_URL }}',
                  'mac' => '${{ env.MAC_STABLE_URL }}'
              )
            )
          );
          EOT

      - name: Commit & Push
        uses: Andro999b/push@v1.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: web
          message: "Github Actions - Updated dl_constants.php to ${{ github.event.release.tag_name }}"
      - name: SFTP Upload to Webserver
        uses: Dylan700/sftp-upload-action@v1.1.4
        with:
          server: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASSWORD }}
          uploads: |
            snippets/dl_constants.php => /htdocs/snippets/dl_constants.php
  # update-backend-files:
  #   name: Update plugin version & download url
  #   if: github.event.release.target_commitish == 'moodle' && !github.event.release.prerelease
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v3
  #       with:
  #         ref: web

  #     - name: Update plugin url
  #       run: sed -i '/dl_plugin/c\const dl_plugin = "${{ github.server_url }}/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/lb_planner.zip";' /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/snippets/dl_constants.php

  #     - name: Update plugin comment
  #       run: sed -i '/Plugin download url/c\ * Plugin download url [@${{ github.event.release.tag_name }}](${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.event.release.tag_name }}).' /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/snippets/dl_constants.php

  #     - name: Commit & Push
  #       uses: Andro999b/push@v1.3
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         branch: web
  #         message: "Github Actions - Updated dl_constants.php to ${{ github.event.release.tag_name }}"
  #     - name: SFTP Upload to Webserver
  #       uses: Dylan700/sftp-upload-action@v1.1.4
  #       with:
  #         server: ${{ secrets.SFTP_HOST }}
  #         username: ${{ secrets.SFTP_USER }}
  #         password: ${{ secrets.SFTP_PASSWORD }}
  #         uploads: |
  #           snippets/dl_constants.php => /htdocs/snippets/dl_constants.php
